# syntax=docker/dockerfile:experimental

FROM ubuntu:19.10 AS build

# Generated with ogs-container-maker 1.4.3

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        curl \
        make \
        tar \
        wget && \
    rm -rf /var/lib/apt/lists/*

# GNU compiler
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        g++ \
        gcc && \
    rm -rf /var/lib/apt/lists/*

# pip
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel && \
    rm -rf /var/lib/apt/lists/*
RUN pip3 install scif

# OGS base building block
# Python
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3 \
        python3-dev && \
    rm -rf /var/lib/apt/lists/*
# pip
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel && \
    rm -rf /var/lib/apt/lists/*
RUN pip3 install virtualenv pre-commit cmake-format
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends software-properties-common && \
    apt-add-repository ppa:git-core/ppa -y && \
    apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        git \
        git-lfs \
        ninja-build && \
    rm -rf /var/lib/apt/lists/*
RUN apt-get update && \
    apt-get install -y dirmngr --install-recommends && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157 && \
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    git lfs install && \
    mkdir -p /apps /scratch /lustre /work /projects /data

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libgl1-mesa-dev \
        libglu1-mesa-dev \
        libxt-dev \
        mesa-common-dev && \
    rm -rf /var/lib/apt/lists/*

# CMake version 3.16.6
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        make \
        wget && \
    rm -rf /var/lib/apt/lists/*
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.16/cmake-3.16.6-Linux-x86_64.sh && \
    mkdir -p /usr/local && \
    /bin/sh /var/tmp/cmake-3.16.6-Linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm -rf /var/tmp/cmake-3.16.6-Linux-x86_64.sh
ENV PATH=/usr/local/bin:$PATH

# Package manager Conan building block
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        pkg-config && \
    rm -rf /var/lib/apt/lists/*
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        autoconf-archive \
        libtool && \
    rm -rf /var/lib/apt/lists/*
# pip
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel && \
    rm -rf /var/lib/apt/lists/*
RUN pip3 install conan==1.22.2
RUN mkdir -p /opt/conan && \
    chmod 777 /opt/conan
ENV CONAN_USER_HOME=/opt/conan
LABEL org.opengeosys.pm=conan \
    org.opengeosys.pm.conan.version=1.22.2
LABEL org.opengeosys.pm.conan.user_home=/opt/conan

# CVode version 2.8.2
# https://github.com/ufz/cvode/archive/2.8.2.tar.gz
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://github.com/ufz/cvode/archive/2.8.2.tar.gz && \
    mkdir -p /var/tmp && tar -x -f /var/tmp/2.8.2.tar.gz -C /var/tmp -z && \
    mkdir -p /var/tmp/cvode-2.8.2/build && cd /var/tmp/cvode-2.8.2/build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/cvode -D CMAKE_INSTALL_PREFIX=/usr/local/cvode -D EXAMPLES_INSTALL=OFF -D BUILD_SHARED_LIBS=OFF -D CMAKE_POSITION_INDEPENDENT_CODE=ON /var/tmp/cvode-2.8.2 && \
    cmake --build /var/tmp/cvode-2.8.2/build --target all -- -j$(nproc) && \
    cmake --build /var/tmp/cvode-2.8.2/build --target install -- -j$(nproc) && \
    rm -rf /var/tmp/cvode-2.8.2 /var/tmp/2.8.2.tar.gz
ENV CVODE_ROOT=/usr/local/cvode

# cppcheck version 809a769c690d8ab6fef293e41a29c8490512866e
# https://github.com/danmar/cppcheck/archive/809a769c690d8ab6fef293e41a29c8490512866e.tar.gz
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://github.com/danmar/cppcheck/archive/809a769c690d8ab6fef293e41a29c8490512866e.tar.gz && \
    mkdir -p /var/tmp && tar -x -f /var/tmp/809a769c690d8ab6fef293e41a29c8490512866e.tar.gz -C /var/tmp -z && \
    mkdir -p /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e/build && cd /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e/build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/cppcheck -D CMAKE_BUILD_TYPE=Release /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e && \
    cmake --build /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e/build --target all -- -j$(nproc) && \
    cmake --build /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e/build --target install -- -j$(nproc) && \
    rm -rf /var/tmp/cppcheck-809a769c690d8ab6fef293e41a29c8490512866e /var/tmp/809a769c690d8ab6fef293e41a29c8490512866e.tar.gz
ENV PATH=/usr/local/cppcheck/bin:$PATH

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        doxygen \
        graphviz \
        texlive-base && \
    rm -rf /var/lib/apt/lists/*

# pip
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel && \
    rm -rf /var/lib/apt/lists/*
RUN pip3 install gcovr

# ccache building block
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ccache && \
    rm -rf /var/lib/apt/lists/*
RUN mkdir -p /opt/ccache && chmod 777 /opt/ccache
ENV CCACHE_DIR=/opt/ccache \
    CCACHE_MAXSIZE=15G \
    CCACHE_SLOPPINESS=pch_defines,time_macros
LABEL ccache.dir=/opt/ccache \
    ccache.size=15G

# Jenkins node
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        openssh-client \
        rsync \
        sudo && \
    rm -rf /var/lib/apt/lists/*
RUN groupadd --gid 1001 jenkins || true && \
    adduser --uid 500 --gid 1001 --disabled-password --gecos "" jenkins && \
    echo "jenkins ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    echo "jenkins:jenkins" | chpasswd
USER jenkins
WORKDIR /home/jenkins
